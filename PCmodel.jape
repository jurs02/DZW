Phase:	PC_Model
Input: Token Lookup Numchar
Options: control = appelt

Macro: PC_BRAND
({Lookup.majorType==brand,Lookup.minorType==pc})


//To match even both upperInitial and mixedCaps
MACRO: UPPER_INITIAL
({Token.string==~"[A-Z][a-zA-Z]*"})


Rule: PC1
(PC_BRAND (UPPER_INITIAL)[0,2] {Numchar.kind=="numchar"} ({Token.string==~"[A-Z][a-zA-Z]+",Token.category==NNP}|{Numchar.kind=="numchar"})[0,2]): pc
--> :pc.PCModel = {rule= "PC1" }

Phase: GPU
Input: Token Lookup Numchar
Options: control = appelt

Rule: GPU1
({Token.string==~"[A-Z][a-zA-Z]+",Token.category==NNP}|{Numchar})*:gpu
({Token.string=="graphics"}{Token.string=="card"})
--> :gpu.GPU = {rule = "GPU1"}

Rule: GPU_NVIDIA
({Token.string==NVIDIA} (UPPER_INITIAL)[1,2] {Numchar} ({DashString})?):gpu
-->:gpu.GPU = {rule = "GPU_NVIDIA",brand="NVIDIA"}

Rule: GPU_AMD
({Token.string==AMD} (UPPER_INITIAL|{Numchar})[1,2]{Numchar}):gpu
-->:gpu.GPU = {rule = "GPU_AMD",brand="AMD"}

Rule: GPU_Intel
({Token.string==Intel} (UPPER_INITIAL)[0,2]{Token.string=~"[Gg]raphics"} (UPPER_INITIAL)[0,2]{Token.kind=="number"}):gpu
-->:gpu.GPU = {rule = "GPU_Intel",brand="Intel"}