Phase:	JoinTokens
Input: Token SpaceToken
Options: control = appelt

Rule: JoinStringsWithNumbers
(
({Token.string=~"[a-zA-Z]"})?
({Token.kind==number})+
({Token.string=~"[a-zA-Z]"}|{Token.kind==number}|{Token.string=="-"}|{Token.string=="\""})*
):left
-->
{AnnotationSet toRemove = bindings.get("left");
  //outputAS.removeAll(toRemove);
   ArrayList tokens = new ArrayList(toRemove);
  //define a comparator for annotations by start offset
  Collections.sort(tokens, new OffsetComparator());
  String text = "";
  Iterator tokIter = tokens.iterator();
  while(tokIter.hasNext())
    text += (String)((Annotation)tokIter.next()).getFeatures().get("string");
    FeatureMap features = Factory.newFeatureMap();
	features.put("kind", "numchar");
  features.put("string", text);
  features.put("length", Integer.toString(text.length()));
outputAS.add(toRemove.firstNode(), toRemove.lastNode(), "Numchar", features);
}

Rule: JoinStringsWithDash
(({Token.string=~"[a-zA-Z]+-"})
({Token.string=~"[a-zA-Z-]"})+):left
-->
{AnnotationSet toRemove = bindings.get("left");
  //outputAS.removeAll(toRemove);
   ArrayList tokens = new ArrayList(toRemove);
  //define a comparator for annotations by start offset
  Collections.sort(tokens, new OffsetComparator());
  String text = "";
  Iterator tokIter = tokens.iterator();
  while(tokIter.hasNext())
    text += (String)((Annotation)tokIter.next()).getFeatures().get("string");
    FeatureMap features = Factory.newFeatureMap();
	features.put("kind", "dashstring");
  features.put("string", text);
  features.put("length", Integer.toString(text.length()));
outputAS.add(toRemove.firstNode(), toRemove.lastNode(), "DashString", features);
}